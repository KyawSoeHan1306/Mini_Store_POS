Index: pos/management/commands/create_sample_data.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.core.management.base import BaseCommand\r\nfrom django.contrib.auth.models import User\r\nfrom pos.models import UserProfile, Category, Product\r\n\r\nclass Command(BaseCommand):\r\n    help = 'Create sample data for testing'\r\n\r\n    def handle(self, *args, **options):\r\n        # Create admin user\r\n        if not User.objects.filter(username='admin').exists():\r\n            admin_user = User.objects.create_user(\r\n                username='admin',\r\n                email='admin@example.com',\r\n                password='admin123',\r\n                first_name='Admin',\r\n                last_name='User'\r\n            )\r\n            UserProfile.objects.create(user=admin_user, role='admin', phone='1234567890')\r\n            self.stdout.write('Admin user created: admin/admin123')\r\n\r\n        # Create cashier user\r\n        if not User.objects.filter(username='cashier').exists():\r\n            cashier_user = User.objects.create_user(\r\n                username='cashier',\r\n                email='cashier@example.com',\r\n                password='cashier123',\r\n                first_name='Cashier',\r\n                last_name='User'\r\n            )\r\n            UserProfile.objects.create(user=cashier_user, role='cashier', phone='9876543210')\r\n            self.stdout.write('Cashier user created: cashier/cashier123')\r\n\r\n        # Create sample categories\r\n        categories = [\r\n            {'name': 'Beverages', 'description': 'Soft drinks, juices, water'},\r\n            {'name': 'Snacks', 'description': 'Chips, biscuits, chocolates'},\r\n            {'name': 'Dairy', 'description': 'Milk, cheese, yogurt'},\r\n            {'name': 'Groceries', 'description': 'Rice, flour, spices'},\r\n        ]\r\n\r\n        for cat_data in categories:\r\n            category, created = Category.objects.get_or_create(\r\n                name=cat_data['name'],\r\n                defaults={'description': cat_data['description']}\r\n            )\r\n            if created:\r\n                self.stdout.write(f'Category created: {category.name}')\r\n\r\n        # Create sample products\r\n        products = [\r\n            {'name': 'Coca Cola 500ml', 'category': 'Beverages', 'price': 25.00, 'stock': 50},\r\n            {'name': 'Lays Chips 50g', 'category': 'Snacks', 'price': 15.00, 'stock': 30},\r\n            {'name': 'Milk 1L', 'category': 'Dairy', 'price': 45.00, 'stock': 20},\r\n            {'name': 'Rice 1kg', 'category': 'Groceries', 'price': 80.00, 'stock': 25},\r\n            {'name': 'Pepsi 500ml', 'category': 'Beverages', 'price': 25.00, 'stock': 40},\r\n            {'name': 'Oreo Biscuits', 'category': 'Snacks', 'price': 30.00, 'stock': 35},\r\n            {'name': 'Cheese 200g', 'category': 'Dairy', 'price': 120.00, 'stock': 15},\r\n            {'name': 'Wheat Flour 1kg', 'category': 'Groceries', 'price': 60.00, 'stock': 20},\r\n        ]\r\n\r\n        for prod_data in products:\r\n            category = Category.objects.get(name=prod_data['category'])\r\n            product, created = Product.objects.get_or_create(\r\n                name=prod_data['name'],\r\n                defaults={\r\n                    'category': category,\r\n                    'price': prod_data['price'],\r\n                    'stock_quantity': prod_data['stock'],\r\n                    'min_stock_level': 5,\r\n                }\r\n            )\r\n            if created:\r\n                self.stdout.write(f'Product created: {product.name}')\r\n\r\n        self.stdout.write(self.style.SUCCESS('Sample data created successfully!'))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pos/management/commands/create_sample_data.py b/pos/management/commands/create_sample_data.py
--- a/pos/management/commands/create_sample_data.py	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/pos/management/commands/create_sample_data.py	(date 1753462394165)
@@ -1,75 +1,388 @@
 from django.core.management.base import BaseCommand
-from django.contrib.auth.models import User
-from pos.models import UserProfile, Category, Product
+from django.contrib.auth.models import User, Group
+from django.db import transaction
+from decimal import Decimal
+import random
+from datetime import datetime, timedelta
+from pos.models import UserProfile, Category, Product, Sale, SaleItem, StockMovement
+
 
 class Command(BaseCommand):
-    help = 'Create sample data for testing'
+    help = 'Create sample data for Mini Store POS'
 
     def handle(self, *args, **options):
-        # Create admin user
-        if not User.objects.filter(username='admin').exists():
-            admin_user = User.objects.create_user(
-                username='admin',
-                email='admin@example.com',
-                password='admin123',
-                first_name='Admin',
-                last_name='User'
+        self.stdout.write('Creating sample data...')
+
+        try:
+            with transaction.atomic():
+                # Create groups first
+                self.create_groups()
+
+                # Create users and profiles
+                self.create_users()
+
+                # Create categories
+                self.create_categories()
+
+                # Create products
+                self.create_products()
+
+                # Create sales
+                self.create_sales()
+
+                # Create stock movements
+                self.create_stock_movements()
+
+            self.stdout.write(
+                self.style.SUCCESS('Sample data created successfully!')
             )
-            UserProfile.objects.create(user=admin_user, role='admin', phone='1234567890')
-            self.stdout.write('Admin user created: admin/admin123')
+            self.stdout.write('')
+            self.stdout.write('Login credentials:')
+            self.stdout.write('Admin: username=admin, password=password123')
+            self.stdout.write('Cashier: username=cashier1, password=password123')
 
-        # Create cashier user
-        if not User.objects.filter(username='cashier').exists():
-            cashier_user = User.objects.create_user(
-                username='cashier',
-                email='cashier@example.com',
-                password='cashier123',
-                first_name='Cashier',
-                last_name='User'
+        except Exception as e:
+            self.stdout.write(
+                self.style.ERROR(f'Error creating sample data: {str(e)}')
             )
-            UserProfile.objects.create(user=cashier_user, role='cashier', phone='9876543210')
-            self.stdout.write('Cashier user created: cashier/cashier123')
+
+    def create_groups(self):
+        """Create user groups"""
+        groups = ['Admin', 'Cashier']
+        for group_name in groups:
+            group, created = Group.objects.get_or_create(name=group_name)
+            if created:
+                self.stdout.write(f'Created group: {group_name}')
 
-        # Create sample categories
-        categories = [
-            {'name': 'Beverages', 'description': 'Soft drinks, juices, water'},
-            {'name': 'Snacks', 'description': 'Chips, biscuits, chocolates'},
-            {'name': 'Dairy', 'description': 'Milk, cheese, yogurt'},
-            {'name': 'Groceries', 'description': 'Rice, flour, spices'},
+    def create_users(self):
+        """Create sample users with profiles"""
+        users_data = [
+            {
+                'username': 'admin',
+                'email': 'admin@ministore.com',
+                'first_name': 'Admin',
+                'last_name': 'User',
+                'is_staff': True,
+                'is_superuser': True,
+                'groups': ['Admin'],
+                'role': 'admin',
+                'phone': '555-0001'
+            },
+            {
+                'username': 'cashier1',
+                'email': 'cashier1@ministore.com',
+                'first_name': 'Alice',
+                'last_name': 'Smith',
+                'groups': ['Cashier'],
+                'role': 'cashier',
+                'phone': '555-0002'
+            },
+            {
+                'username': 'cashier2',
+                'email': 'cashier2@ministore.com',
+                'first_name': 'Bob',
+                'last_name': 'Johnson',
+                'groups': ['Cashier'],
+                'role': 'cashier',
+                'phone': '555-0003'
+            }
         ]
 
-        for cat_data in categories:
+        for user_data in users_data:
+            # Check if user already exists
+            user, created = User.objects.get_or_create(
+                username=user_data['username'],
+                defaults={
+                    'email': user_data['email'],
+                    'first_name': user_data['first_name'],
+                    'last_name': user_data['last_name'],
+                    'is_staff': user_data.get('is_staff', False),
+                    'is_superuser': user_data.get('is_superuser', False),
+                }
+            )
+
+            if created:
+                user.set_password('password123')  # Set default password
+                user.save()
+                self.stdout.write(f'Created user: {user.username}')
+            else:
+                self.stdout.write(f'User already exists: {user.username}')
+
+            # Add user to groups
+            for group_name in user_data['groups']:
+                group = Group.objects.get(name=group_name)
+                user.groups.add(group)
+
+            # Create or update UserProfile
+            profile, profile_created = UserProfile.objects.get_or_create(
+                user=user,
+                defaults={
+                    'role': user_data['role'],
+                    'phone': user_data['phone']
+                }
+            )
+
+            if profile_created:
+                self.stdout.write(f'Created profile for: {user.username}')
+            else:
+                # Update existing profile
+                profile.role = user_data['role']
+                profile.phone = user_data['phone']
+                profile.save()
+                self.stdout.write(f'Updated profile for: {user.username}')
+
+    def create_categories(self):
+        """Create product categories"""
+        categories_data = [
+            {'name': 'Electronics', 'description': 'Electronic devices and accessories'},
+            {'name': 'Clothing', 'description': 'Apparel and fashion items'},
+            {'name': 'Food & Beverages', 'description': 'Food items and drinks'},
+            {'name': 'Books & Stationery', 'description': 'Books, notebooks, and office supplies'},
+            {'name': 'Home & Garden', 'description': 'Household items and garden supplies'},
+            {'name': 'Sports & Fitness', 'description': 'Sports equipment and fitness gear'},
+            {'name': 'Health & Beauty', 'description': 'Health products and cosmetics'},
+            {'name': 'Toys & Games', 'description': 'Toys and entertainment items'},
+        ]
+
+        for cat_data in categories_data:
             category, created = Category.objects.get_or_create(
                 name=cat_data['name'],
-                defaults={'description': cat_data['description']}
+                defaults={
+                    'description': cat_data['description'],
+                    'is_active': True
+                }
             )
             if created:
-                self.stdout.write(f'Category created: {category.name}')
+                self.stdout.write(f'Created category: {cat_data["name"]}')
+
+    def create_products(self):
+        """Create sample products"""
+        categories = list(Category.objects.all())
+
+        if not categories:
+            self.stdout.write('No categories found. Creating products without categories.')
+            return
+
+        products_data = [
+            # Electronics
+            {'name': 'Smartphone', 'category': 'Electronics', 'price': 25000.00, 'stock': 50},
+            {'name': 'Laptop', 'category': 'Electronics', 'price': 45000.00, 'stock': 20},
+            {'name': 'Bluetooth Headphones', 'category': 'Electronics', 'price': 2500.00, 'stock': 75},
+            {'name': 'USB Cable', 'category': 'Electronics', 'price': 500.00, 'stock': 100},
+            {'name': 'Power Bank', 'category': 'Electronics', 'price': 1500.00, 'stock': 60},
+
+            # Clothing
+            {'name': 'Cotton T-Shirt', 'category': 'Clothing', 'price': 800.00, 'stock': 80},
+            {'name': 'Blue Jeans', 'category': 'Clothing', 'price': 1500.00, 'stock': 40},
+            {'name': 'Running Shoes', 'category': 'Clothing', 'price': 3000.00, 'stock': 30},
+            {'name': 'Baseball Cap', 'category': 'Clothing', 'price': 600.00, 'stock': 50},
 
-        # Create sample products
-        products = [
-            {'name': 'Coca Cola 500ml', 'category': 'Beverages', 'price': 25.00, 'stock': 50},
-            {'name': 'Lays Chips 50g', 'category': 'Snacks', 'price': 15.00, 'stock': 30},
-            {'name': 'Milk 1L', 'category': 'Dairy', 'price': 45.00, 'stock': 20},
-            {'name': 'Rice 1kg', 'category': 'Groceries', 'price': 80.00, 'stock': 25},
-            {'name': 'Pepsi 500ml', 'category': 'Beverages', 'price': 25.00, 'stock': 40},
-            {'name': 'Oreo Biscuits', 'category': 'Snacks', 'price': 30.00, 'stock': 35},
-            {'name': 'Cheese 200g', 'category': 'Dairy', 'price': 120.00, 'stock': 15},
-            {'name': 'Wheat Flour 1kg', 'category': 'Groceries', 'price': 60.00, 'stock': 20},
+            # Food & Beverages
+            {'name': 'Premium Coffee Beans 1kg', 'category': 'Food & Beverages', 'price': 1200.00, 'stock': 25},
+            {'name': 'Green Tea Box', 'category': 'Food & Beverages', 'price': 300.00, 'stock': 40},
+            {'name': 'Dark Chocolate Bar', 'category': 'Food & Beverages', 'price': 150.00, 'stock': 120},
+            {'name': 'Energy Drink', 'category': 'Food & Beverages', 'price': 80.00, 'stock': 200},
+
+            # Books & Stationery
+            {'name': 'Programming Handbook', 'category': 'Books & Stationery', 'price': 1800.00, 'stock': 15},
+            {'name': 'Notebook Set', 'category': 'Books & Stationery', 'price': 400.00, 'stock': 60},
+            {'name': 'Ballpoint Pens (Pack of 10)', 'category': 'Books & Stationery', 'price': 200.00, 'stock': 80},
+
+            # Home & Garden
+            {'name': 'Ceramic Plant Pot', 'category': 'Home & Garden', 'price': 400.00, 'stock': 35},
+            {'name': 'Kitchen Knife Set', 'category': 'Home & Garden', 'price': 1200.00, 'stock': 20},
+            {'name': 'LED Table Lamp', 'category': 'Home & Garden', 'price': 800.00, 'stock': 25},
+
+            # Sports & Fitness
+            {'name': 'Tennis Ball Set', 'category': 'Sports & Fitness', 'price': 300.00, 'stock': 45},
+            {'name': 'Yoga Mat', 'category': 'Sports & Fitness', 'price': 1500.00, 'stock': 30},
+            {'name': 'Water Bottle', 'category': 'Sports & Fitness', 'price': 400.00, 'stock': 70},
+
+            # Health & Beauty
+            {'name': 'Face Cream', 'category': 'Health & Beauty', 'price': 800.00, 'stock': 40},
+            {'name': 'Shampoo 500ml', 'category': 'Health & Beauty', 'price': 600.00, 'stock': 55},
+
+            # Toys & Games
+            {'name': 'Board Game', 'category': 'Toys & Games', 'price': 1200.00, 'stock': 20},
+            {'name': 'Puzzle 1000 pieces', 'category': 'Toys & Games', 'price': 800.00, 'stock': 15},
         ]
 
-        for prod_data in products:
-            category = Category.objects.get(name=prod_data['category'])
-            product, created = Product.objects.get_or_create(
-                name=prod_data['name'],
-                defaults={
-                    'category': category,
-                    'price': prod_data['price'],
-                    'stock_quantity': prod_data['stock'],
-                    'min_stock_level': 5,
-                }
-            )
-            if created:
-                self.stdout.write(f'Product created: {product.name}')
+        for product_data in products_data:
+            try:
+                category = next((cat for cat in categories if cat.name == product_data['category']), None)
+                if not category:
+                    category = random.choice(categories)
+
+                # Generate unique barcode
+                barcode = f"{random.randint(1000000000000, 9999999999999)}"
+
+                product, created = Product.objects.get_or_create(
+                    name=product_data['name'],
+                    defaults={
+                        'category': category,
+                        'barcode': barcode,
+                        'price': Decimal(str(product_data['price'])),
+                        'stock_quantity': product_data['stock'],
+                        'min_stock_level': random.randint(5, 15),
+                        'description': f"High quality {product_data['name'].lower()}",
+                        'is_active': True
+                    }
+                )
+
+                if created:
+                    self.stdout.write(f'Created product: {product_data["name"]} - ₹{product_data["price"]}')
+
+            except Exception as e:
+                self.stdout.write(f'Error creating product {product_data["name"]}: {str(e)}')
+
+    def create_sales(self):
+        """Create sample sales"""
+        users = User.objects.filter(userprofile__role='cashier')
+        if not users.exists():
+            users = User.objects.all()
+
+        products = Product.objects.filter(stock_quantity__gt=0)
+
+        if not products.exists():
+            self.stdout.write('No products with stock found. Skipping sales.')
+            return
+
+        payment_methods = ['cash', 'card', 'digital']
+        customer_names = [
+            'John Doe', 'Jane Smith', 'Mike Johnson', 'Sarah Wilson',
+            'David Brown', 'Lisa Davis', 'Tom Anderson', 'Emma Taylor',
+            '', '', ''  # Some empty names for walk-in customers
+        ]
+
+        for i in range(25):  # Create 25 sample sales
+            try:
+                cashier = random.choice(users)
+                sale_date = datetime.now() - timedelta(days=random.randint(0, 30))
+                customer_name = random.choice(customer_names)
+
+                # Create the sale
+                sale = Sale.objects.create(
+                    cashier=cashier,
+                    total_amount=Decimal('0'),  # Will be calculated
+                    discount_amount=Decimal('0'),
+                    tax_amount=Decimal('0'),
+                    final_amount=Decimal('0'),  # Will be calculated
+                    payment_method=random.choice(payment_methods),
+                    customer_name=customer_name,
+                    customer_phone=f'555-{random.randint(1000, 9999)}' if customer_name else '',
+                    created_at=sale_date
+                )
+
+                # Add random products to sale
+                sale_total = Decimal('0')
+                available_products = list(products.filter(stock_quantity__gt=0))
+                selected_products = random.sample(
+                    available_products,
+                    min(random.randint(1, 5), len(available_products))
+                )
+
+                for product in selected_products:
+                    max_qty = min(product.stock_quantity, 10)
+                    if max_qty <= 0:
+                        continue
+
+                    quantity = random.randint(1, max_qty)
+                    unit_price = product.price
+                    total_price = unit_price * quantity
+
+                    # Create sale item
+                    SaleItem.objects.create(
+                        sale=sale,
+                        product=product,
+                        quantity=quantity,
+                        unit_price=unit_price,
+                        total_price=total_price
+                    )
+
+                    sale_total += total_price
+
+                    # Update product stock
+                    product.stock_quantity -= quantity
+                    product.save()
+
+                # Calculate discount (random 0-10%)
+                discount_percent = random.uniform(0, 0.1)
+                discount_amount = sale_total * Decimal(str(discount_percent))
+
+                # Calculate tax (5% GST)
+                tax_amount = (sale_total - discount_amount) * Decimal('0.05')
+
+                # Calculate final amount
+                final_amount = sale_total - discount_amount + tax_amount
+
+                # Update sale totals
+                sale.total_amount = sale_total
+                sale.discount_amount = discount_amount
+                sale.tax_amount = tax_amount
+                sale.final_amount = final_amount
+                sale.save()
+
+                self.stdout.write(f'Created sale: {sale.invoice_number} - ₹{final_amount:.2f}')
+
+            except Exception as e:
+                self.stdout.write(f'Error creating sale {i + 1}: {str(e)}')
+
+        self.stdout.write(f'Created {Sale.objects.count()} sales total')
+
+    def create_stock_movements(self):
+        """Create sample stock movements"""
+        products = Product.objects.all()
+        users = User.objects.all()
+
+        if not products.exists() or not users.exists():
+            self.stdout.write('No products or users found. Skipping stock movements.')
+            return
+
+        movement_types = ['in', 'out', 'adjustment']
+
+        for i in range(15):  # Create 15 sample stock movements
+            try:
+                product = random.choice(products)
+                user = random.choice(users)
+                movement_type = random.choice(movement_types)
 
-        self.stdout.write(self.style.SUCCESS('Sample data created successfully!'))
+                if movement_type == 'in':
+                    quantity = random.randint(10, 50)
+                    notes = f'Stock replenishment - Purchase Order #{random.randint(1000, 9999)}'
+                    # Update product stock
+                    product.stock_quantity += quantity
+                    product.save()
+                elif movement_type == 'out':
+                    max_out = min(product.stock_quantity, 20)
+                    if max_out <= 0:
+                        continue
+                    quantity = -random.randint(1, max_out)
+                    notes = f'Stock issued - Manual adjustment'
+                    # Update product stock
+                    product.stock_quantity += quantity  # quantity is negative
+                    product.save()
+                else:  # adjustment
+                    quantity = random.randint(-10, 10)
+                    notes = f'Stock adjustment - Inventory count correction'
+                    if product.stock_quantity + quantity >= 0:
+                        product.stock_quantity += quantity
+                        product.save()
+                    else:
+                        continue
+
+                movement = StockMovement.objects.create(
+                    product=product,
+                    movement_type=movement_type,
+                    quantity=abs(quantity),  # Store absolute value
+                    reference_type='manual',
+                    notes=notes,
+                    created_by=user,
+                    created_at=datetime.now() - timedelta(days=random.randint(0, 30))
+                )
+
+                self.stdout.write(f'Created stock movement: {product.name} - {movement_type} - {abs(quantity)}')
+
+            except Exception as e:
+                self.stdout.write(f'Error creating stock movement {i + 1}: {str(e)}')
+
+        self.stdout.write(f'Created {StockMovement.objects.count()} stock movements total')
\ No newline at end of file
Index: pos/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pos/urls.py b/pos/urls.py
--- a/pos/urls.py	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/pos/urls.py	(date 1753467428053)
@@ -1,0 +1,35 @@
+from django.urls import path
+from django.contrib.auth import views as auth_views
+from . import views
+
+urlpatterns = [
+    # Authentication
+    path('', views.dashboard_view, name='dashboard'),
+    path('login/', auth_views.LoginView.as_view(), name='login'),
+    path('logout/', auth_views.LogoutView.as_view(), name='logout'),
+    path('register/', views.register_view, name='register'),
+
+    # Admin URLs
+    path('products/', views.product_list_view, name='product_list'),
+    path('products/add/', views.product_create_view, name='product_create'),
+    path('products/<int:pk>/edit/', views.product_edit_view, name='product_edit'),
+
+    path('categories/', views.category_list_view, name='category_list'),
+    path('categories/add/', views.category_create_view, name='category_create'),
+    path('categories/<int:pk>/edit/', views.category_edit_view, name='category_edit'),
+
+    path('sales-report/', views.sales_report_view, name='sales_report'),
+    path('export-sales-csv/', views.export_sales_csv, name='export_sales_csv'),
+    path('export-sales-pdf/', views.export_sales_pdf, name='export_sales_pdf'),
+    path('sale/<int:sale_id>/', views.sale_detail_view, name='sale_detail'),
+    path('sale/<int:sale_id>/edit/', views.sale_edit_view, name='sale_edit'),
+    path('stock-management/', views.stock_management_view, name='stock_management'),
+    path('user-management/', views.user_management_view, name='user_management'),
+
+    # Cashier URLs
+    path('pos/', views.pos_interface_view, name='pos_interface'),
+    path('api/product/<int:pk>/', views.get_product_details, name='get_product_details'),
+    path('api/process-sale/', views.process_sale, name='process_sale'),
+    path('receipt/<int:sale_id>/', views.sale_receipt_view, name='sale_receipt'),
+    path('my-sales/', views.my_sales_view, name='my_sales'),
+]
\ No newline at end of file
Index: pos/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pos/forms.py b/pos/forms.py
--- a/pos/forms.py	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/pos/forms.py	(date 1753467711445)
@@ -1,0 +1,77 @@
+from django import forms
+from django.contrib.auth.forms import UserCreationForm
+from django.contrib.auth.models import User
+
+from . import models
+from .models import Product, Category, Sale, UserProfile, StockMovement
+
+
+class CustomUserCreationForm(UserCreationForm):
+    email = forms.EmailField(required=True)
+    first_name = forms.CharField(required=True)
+    last_name = forms.CharField(required=True)
+    role = forms.ChoiceField(choices=UserProfile.ROLE_CHOICES, required=True)
+    phone = forms.CharField(max_length=15, required=False)
+
+    class Meta:
+        model = User
+        fields = ("username", "email", "first_name", "last_name", "password1", "password2")
+
+    def save(self, commit=True):
+        user = super().save(commit=False)
+        user.email = self.cleaned_data["email"]
+        user.first_name = self.cleaned_data["first_name"]
+        user.last_name = self.cleaned_data["last_name"]
+        if commit:
+            user.save()
+            UserProfile.objects.create(
+                user=user,
+                role=self.cleaned_data["role"],
+                phone=self.cleaned_data["phone"]
+            )
+        return user
+
+
+class ProductForm(forms.ModelForm):
+    class Meta:
+        model = Product
+        fields = ['name', 'category', 'barcode', 'price', 'stock_quantity', 'min_stock_level', 'image', 'description',
+                  'is_active']
+        widgets = {
+            'description': forms.Textarea(attrs={'rows': 3}),
+            'price': forms.NumberInput(attrs={'step': '0.01'}),
+        }
+
+
+class CategoryForm(forms.ModelForm):
+    class Meta:
+        model = Category
+        fields = ['name', 'description', 'is_active']
+        widgets = {
+            'description': forms.Textarea(attrs={'rows': 3}),
+        }
+
+
+class StockAdjustmentForm(forms.ModelForm):
+    class Meta:
+        model = StockMovement
+        fields = ['product', 'movement_type', 'quantity', 'notes']
+        widgets = {
+            'notes': forms.Textarea(attrs={'rows': 2}),
+        }
+
+
+class SaleFilterForm(forms.Form):
+    start_date = forms.DateField(required=False, widget=forms.DateInput(attrs={'type': 'date'}))
+    end_date = forms.DateField(required=False, widget=forms.DateInput(attrs={'type': 'date'}))
+    cashier = forms.ModelChoiceField(queryset=User.objects.filter(userprofile__role='cashier'), required=False)
+    payment_method = forms.ChoiceField(choices=[('', 'All')] + Sale.PAYMENT_CHOICES, required=False)
+
+
+class SaleEditForm(forms.ModelForm):
+    class Meta:
+        model = Sale
+        fields = ['customer_name', 'customer_phone', 'payment_method',
+                 'discount_amount', 'tax_amount', 'notes']
+
+
Index: requirements.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/requirements.txt b/requirements.txt
--- a/requirements.txt	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/requirements.txt	(date 1754401070350)
@@ -1,0 +1,7 @@
+Django~=4.2.7
+Pillow
+django-crispy-forms==2.0
+crispy-bootstrap5==0.7
+python-decouple==3.8
+dj_database_url
+reportlab~=3.6.13
\ No newline at end of file
Index: pos/signals.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pos/signals.py b/pos/signals.py
--- a/pos/signals.py	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/pos/signals.py	(date 1753424051904)
@@ -1,0 +1,20 @@
+from django.db.models.signals import post_save
+from django.dispatch import receiver
+from django.contrib.auth.models import User
+from .models import UserProfile
+
+@receiver(post_save, sender=User)
+def create_user_profile(sender, instance, created, **kwargs):
+    """Create UserProfile when User is created via admin"""
+    if created and not hasattr(instance, 'userprofile'):
+        # Only create if profile doesn't exist
+        UserProfile.objects.get_or_create(
+            user=instance,
+            defaults={'role': 'cashier', 'phone': ''}
+        )
+
+@receiver(post_save, sender=User)
+def save_user_profile(sender, instance, **kwargs):
+    """Save UserProfile when User is saved"""
+    if hasattr(instance, 'userprofile'):
+        instance.userprofile.save()
\ No newline at end of file
Index: static/css/custom.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/css/custom.css b/static/css/custom.css
--- a/static/css/custom.css	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/static/css/custom.css	(date 1753424085052)
@@ -1,0 +1,148 @@
+.product-grid {
+    display: grid;
+    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
+    gap: 1rem;
+}
+
+.product-card {
+    transition: all 0.3s ease;
+    cursor: pointer;
+    border-radius: 10px;
+    overflow: hidden;
+}
+
+.product-card:hover {
+    transform: translateY(-5px);
+    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
+}
+
+.product-image {
+    width: 100%;
+    height: 150px;
+    object-fit: cover;
+    background: linear-gradient(45deg, #f0f0f0, #e0e0e0);
+}
+
+.cart-sidebar {
+    position: sticky;
+    top: 20px;
+    max-height: calc(100vh - 40px);
+    overflow-y: auto;
+}
+
+.low-stock-badge {
+    position: absolute;
+    top: 5px;
+    right: 5px;
+    background: #ff6b6b;
+    color: white;
+    font-size: 0.7rem;
+    padding: 2px 6px;
+    border-radius: 10px;
+}
+
+.sidebar-gradient {
+    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
+}
+
+.card-hover {
+    transition: all 0.3s ease;
+}
+
+.card-hover:hover {
+    transform: translateY(-2px);
+    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
+}
+
+.btn-gradient {
+    background: linear-gradient(45deg, #667eea, #764ba2);
+    border: none;
+    color: white;
+}
+
+.btn-gradient:hover {
+    background: linear-gradient(45deg, #764ba2, #667eea);
+    color: white;
+}
+
+.stat-card {
+    border-radius: 15px;
+    overflow: hidden;
+}
+
+.receipt-container {
+    background: white;
+    border-radius: 10px;
+    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
+}
+
+@media print {
+    .sidebar, .navbar, .btn, .no-print {
+        display: none !important;
+    }
+
+    .receipt-container {
+        box-shadow: none;
+        border: none;
+    }
+}
+
+/* POS specific styles */
+.pos-container {
+    height: 100vh;
+    overflow: hidden;
+}
+
+.products-section {
+    height: calc(100vh - 100px);
+    overflow-y: auto;
+}
+
+.cart-section {
+    height: calc(100vh - 100px);
+    display: flex;
+    flex-direction: column;
+}
+
+.cart-items {
+    flex-grow: 1;
+    overflow-y: auto;
+}
+
+.cart-footer {
+    border-top: 1px solid #dee2e6;
+    padding-top: 1rem;
+    margin-top: auto;
+}
+
+.quantity-controls {
+    display: flex;
+    align-items: center;
+    gap: 0.5rem;
+}
+
+.quantity-btn {
+    width: 30px;
+    height: 30px;
+    border: 1px solid #dee2e6;
+    background: white;
+    border-radius: 5px;
+    display: flex;
+    align-items: center;
+    justify-content: center;
+    cursor: pointer;
+    transition: all 0.2s;
+}
+
+.quantity-btn:hover {
+    background: #f8f9fa;
+    border-color: #adb5bd;
+}
+
+.quantity-input {
+    width: 60px;
+    text-align: center;
+    border: 1px solid #dee2e6;
+    border-radius: 5px;
+    padding: 0.25rem;
+}
\ No newline at end of file
Index: templates/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/base.html b/templates/base.html
--- a/templates/base.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/base.html	(date 1753422586636)
@@ -1,10 +1,137 @@
 <!DOCTYPE html>
 <html lang="en">
 <head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>{% block title %}Mini Store POS{% endblock %}</title>
+    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
+    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
+    <style>
+        .sidebar {
+            min-height: 100vh;
+            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
+        }
+        .sidebar .nav-link {
+            color: rgba(255,255,255,0.8);
+            padding: 0.75rem 1rem;
+            margin: 0.2rem 0;
+            border-radius: 0.5rem;
+            transition: all 0.3s;
+        }
+        .sidebar .nav-link:hover {
+            color: white;
+            background: rgba(255,255,255,0.1);
+        }
+        .sidebar .nav-link.active {
+            color: white;
+            background: rgba(255,255,255,0.2);
+        }
+        .product-card {
+            cursor: pointer;
+            transition: transform 0.2s, box-shadow 0.2s;
+            border: 1px solid #e0e0e0;
+        }
+        .product-card:hover {
+            transform: translateY(-2px);
+            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
+        }
+        .product-image {
+            height: 120px;
+            object-fit: cover;
+            border-radius: 0.375rem;
+        }
+        .cart-item {
+            border-bottom: 1px solid #eee;
+            padding: 0.5rem 0;
+        }
+        .low-stock {
+            background-color: #fff3cd;
+            border-color: #ffeaa7;
+        }
+        .out-of-stock {
+            background-color: #f8d7da;
+            border-color: #f5c6cb;
+            opacity: 0.6;
+        }
+    </style>
 </head>
-<body>
-$END$
+<body class="bg-light">
+    <div class="container-fluid">
+        <div class="row">
+            {% if user.is_authenticated %}
+            <div class="col-md-3 col-lg-2 px-0">
+                <div class="sidebar d-flex flex-column p-3">
+                    <h4 class="text-white mb-4">
+                        <i class="fas fa-store me-2"></i>Mini Store POS
+                    </h4>
+
+                    <div class="user-info text-white mb-4">
+                        <i class="fas fa-user-circle fa-2x"></i>
+                        <div class="ms-2">
+                            <div class="fw-bold">{{ user.first_name }} {{ user.last_name }}</div>
+                            <small class="text-white-50">{{ user.userprofile.role|title }}</small>
+                        </div>
+                    </div>
+
+                    <nav class="nav nav-pills flex-column">
+                        <a class="nav-link" href="{% url 'dashboard' %}">
+                            <i class="fas fa-tachometer-alt me-2"></i>Dashboard
+                        </a>
+
+                        {% if user.userprofile.role == 'admin' %}
+                        <a class="nav-link" href="{% url 'product_list' %}">
+                            <i class="fas fa-box me-2"></i>Products
+                        </a>
+                        <a class="nav-link" href="{% url 'category_list' %}">
+                            <i class="fas fa-tags me-2"></i>Categories
+                        </a>
+                        <a class="nav-link" href="{% url 'sales_report' %}">
+                            <i class="fas fa-chart-line me-2"></i>Sales Report
+                        </a>
+                        <a class="nav-link" href="{% url 'stock_management' %}">
+                            <i class="fas fa-warehouse me-2"></i>Stock Management
+                        </a>
+                        <a class="nav-link" href="{% url 'user_management' %}">
+                            <i class="fas fa-users me-2"></i>User Management
+                        </a>
+                        {% endif %}
+
+                        {% if user.userprofile.role == 'cashier' %}
+                        <a class="nav-link" href="{% url 'my_sales' %}">
+                            <i class="fas fa-receipt me-2"></i>My Sales
+                        </a>
+                        {% endif %}
+                    </nav>
+
+                    <div class="mt-auto">
+                        <a class="nav-link text-danger" href="{% url 'logout' %}">
+                            <i class="fas fa-sign-out-alt me-2"></i>Logout
+                        </a>
+                    </div>
+                </div>
+            </div>
+            {% endif %}
+
+            <div class="{% if user.is_authenticated %}col-md-9 col-lg-10{% else %}col-12{% endif %}">
+                <main class="p-4">
+                    {% if messages %}
+                        {% for message in messages %}
+                            <div class="alert alert-{{ message.tags }} alert-dismissible fade show" role="alert">
+                                {{ message }}
+                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
+                            </div>
+                        {% endfor %}
+                    {% endif %}
+
+                    {% block content %}
+                    {% endblock %}
+                </main>
+            </div>
+        </div>
+    </div>
+
+    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
+    {% block scripts %}
+    {% endblock %}
 </body>
 </html>
\ No newline at end of file
Index: static/js/pos.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/js/pos.js b/static/js/pos.js
--- a/static/js/pos.js	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/static/js/pos.js	(date 1753424121836)
@@ -1,0 +1,94 @@
+// POS JavaScript functionality
+document.addEventListener('DOMContentLoaded', function() {
+    // Initialize POS system
+    initializePOS();
+});
+
+function initializePOS() {
+    // Add event listeners
+    document.addEventListener('keydown', handleKeyboardShortcuts);
+
+    // Auto-focus search input
+    const searchInput = document.querySelector('input[name="search"]');
+    if (searchInput) {
+        searchInput.focus();
+    }
+}
+
+function handleKeyboardShortcuts(event) {
+    // F1 - Focus search
+    if (event.key === 'F1') {
+        event.preventDefault();
+        document.querySelector('input[name="search"]').focus();
+    }
+
+    // F2 - Clear cart
+    if (event.key === 'F2') {
+        event.preventDefault();
+        clearCart();
+    }
+
+    // F3 - Process sale
+    if (event.key === 'F3') {
+        event.preventDefault();
+        if (!document.getElementById('checkout-btn').disabled) {
+            processCheckout();
+        }
+    }
+
+    // ESC - Clear search
+    if (event.key === 'Escape') {
+        const searchInput = document.querySelector('input[name="search"]');
+        if (searchInput) {
+            searchInput.value = '';
+            searchInput.focus();
+        }
+    }
+}
+
+function showNotification(message, type = 'success') {
+    const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
+    const notification = document.createElement('div');
+    notification.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
+    notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
+    notification.innerHTML = `
+        ${message}
+        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
+    `;
+
+    document.body.appendChild(notification);
+
+    // Auto remove after 3 seconds
+    setTimeout(() => {
+        if (notification.parentNode) {
+            notification.remove();
+        }
+    }, 3000);
+}
+
+function formatCurrency(amount) {
+    return `₹${parseFloat(amount).toFixed(2)}`;
+}
+
+function playSound(type) {
+    // Add beep sounds for better UX
+    const audioContext = new (window.AudioContext || window.webkitAudioContext)();
+    const oscillator = audioContext.createOscillator();
+    const gainNode = audioContext.createGain();
+
+    oscillator.connect(gainNode);
+    gainNode.connect(audioContext.destination);
+
+    if (type === 'success') {
+        oscillator.frequency.value = 800;
+        gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
+        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3);
+    } else if (type === 'error') {
+        oscillator.frequency.value = 400;
+        gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
+        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);
+    }
+
+    oscillator.start(audioContext.currentTime);
+    oscillator.stop(audioContext.currentTime + 0.3);
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"275e3bef-41fa-4c82-8a82-614fb1e63cad\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 8\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"30LuhDsqjVIiYgKQJj32UoAp8Xx\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ModuleVcsDetector.initialDetectionPerformed\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-f27c65a3e318-JavaScript-PY-251.23774.444\" />\r\n        <option value=\"bundled-python-sdk-890ed5b35930-d9c5bdb153f4-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.23774.444\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"275e3bef-41fa-4c82-8a82-614fb1e63cad\" name=\"Changes\" comment=\"\" />\r\n      <created>1753419294122</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1753419294122</updated>\r\n      <workItem from=\"1753419294700\" duration=\"123000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/.idea/workspace.xml	(date 1754407808751)
@@ -1,28 +1,134 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="275e3bef-41fa-4c82-8a82-614fb1e63cad" name="Changes" comment="" />
+    <list default="true" id="275e3bef-41fa-4c82-8a82-614fb1e63cad" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/Mini_Store_POS.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Mini_Store_POS.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pos/forms.py" beforeDir="false" afterPath="$PROJECT_DIR$/pos/forms.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pos/management/commands/create_sample_data.py" beforeDir="false" afterPath="$PROJECT_DIR$/pos/management/commands/create_sample_data.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pos/signals.py" beforeDir="false" afterPath="$PROJECT_DIR$/pos/signals.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pos/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/pos/urls.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/requirements.txt" beforeDir="false" afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/static/css/custom.css" beforeDir="false" afterPath="$PROJECT_DIR$/static/css/custom.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/static/js/pos.js" beforeDir="false" afterPath="$PROJECT_DIR$/static/js/pos.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/admin/category_form.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/admin/category_form.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/admin/category_list.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/admin/category_list.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/admin/dashboard.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/admin/dashboard.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/admin/product_form.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/admin/product_form.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/admin/product_list.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/admin/product_list.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/admin/sale_detail.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/admin/sale_detail.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/admin/sale_edit.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/admin/sale_edit.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/admin/sales_report.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/admin/sales_report.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/admin/stock_management.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/admin/stock_management.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/admin/user_management.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/admin/user_management.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/base.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/base.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/cashier/my_sales.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/cashier/my_sales.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/cashier/pos.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/cashier/pos.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/receipt.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/receipt.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/registration/register.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/registration/register.html" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 8
-}]]></component>
+  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
+    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Python Script" />
+        <option value="CSS File" />
+        <option value="JavaScript File" />
+        <option value="HTML File" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;KyawSoeHan1306&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/KyawSoeHan1306/Mini_Store_POS.git&quot;,
+    &quot;accountId&quot;: &quot;9fa48fa4-828f-497c-b2ef-663b402da539&quot;
+  }
+}</component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 8
+}</component>
   <component name="ProjectId" id="30LuhDsqjVIiYgKQJj32UoAp8Xx" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ModuleVcsDetector.initialDetectionPerformed": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "nodejs_package_manager_path": "npm",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
+    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.OpenDjangoStructureViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.Mappings&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  },
+  &quot;keyToStringList&quot;: {
+    &quot;ChangesTree.GroupingKeys&quot;: [
+      &quot;directory&quot;,
+      &quot;repository&quot;
+    ]
   }
-}]]></component>
+}</component>
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="D:\MyProjects\Mini_Store_POS\pos\management\commands" />
+      <recent name="D:\MyProjects\Mini_Store_POS\templates\registration" />
+    </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="Mini_Store_POS" type="Python.DjangoServer" factoryName="Django server">
+      <module name="Mini_Store_POS" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <option name="launchJavascriptDebuger" value="false" />
+      <option name="port" value="8000" />
+      <option name="host" value="" />
+      <option name="additionalOptions" value="" />
+      <option name="browserUrl" value="" />
+      <option name="runTestServer" value="false" />
+      <option name="runNoReload" value="false" />
+      <option name="useCustomRunCommand" value="false" />
+      <option name="customRunCommand" value="" />
+      <method v="2" />
+    </configuration>
+  </component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
@@ -38,8 +144,12 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1753419294122</updated>
-      <workItem from="1753419294700" duration="123000" />
+      <workItem from="1753419294700" duration="13578000" />
+      <workItem from="1754399990284" duration="6755000" />
     </task>
     <servers />
   </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
 </project>
\ No newline at end of file
Index: .idea/Mini_Store_POS.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Mini_Store_POS.iml b/.idea/Mini_Store_POS.iml
--- a/.idea/Mini_Store_POS.iml	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/.idea/Mini_Store_POS.iml	(date 1753421465128)
@@ -1,8 +1,26 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module type="PYTHON_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="django" name="Django">
+      <configuration>
+        <option name="rootFolder" value="$MODULE_DIR$" />
+        <option name="settingsModule" value="Mini_Store_POS/settings.py" />
+        <option name="manageScript" value="$MODULE_DIR$/manage.py" />
+        <option name="environment" value="&lt;map/&gt;" />
+        <option name="doNotUseTestRunner" value="false" />
+        <option name="trackFilePattern" value="migrations" />
+      </configuration>
+    </facet>
+  </component>
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="Mini_Store_POS" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
+  <component name="PackageRequirementsSettings">
+    <option name="modifyBaseFiles" value="true" />
+  </component>
+  <component name="TemplatesService">
+    <option name="TEMPLATE_CONFIGURATION" value="Django" />
+  </component>
 </module>
\ No newline at end of file
Index: templates/admin/category_form.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/admin/category_form.html b/templates/admin/category_form.html
--- a/templates/admin/category_form.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/admin/category_form.html	(date 1753423581976)
@@ -1,10 +1,31 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+{% load crispy_forms_tags %}
+
+{% block title %}{{ title }} - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="row justify-content-center">
+    <div class="col-md-6">
+        <div class="card">
+            <div class="card-header">
+                <h5><i class="fas fa-tags me-2"></i>{{ title }}</h5>
+            </div>
+            <div class="card-body">
+                <form method="post">
+                    {% csrf_token %}
+                    {{ form|crispy }}
+                    
+                    <div class="d-flex justify-content-between">
+                        <a href="{% url 'category_list' %}" class="btn btn-secondary">
+                            <i class="fas fa-arrow-left me-2"></i>Back to Categories
+                        </a>
+                        <button type="submit" class="btn btn-primary">
+                            <i class="fas fa-save me-2"></i>Save Category
+                        </button>
+                    </div>
+                </form>
+            </div>
+        </div>
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: templates/admin/sales_report.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/admin/sales_report.html b/templates/admin/sales_report.html
--- a/templates/admin/sales_report.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/admin/sales_report.html	(date 1753467126367)
@@ -1,10 +1,378 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+{% load crispy_forms_tags %}
+
+{% block title %}Sales Report - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="d-flex justify-content-between align-items-center mb-4">
+    <h2><i class="fas fa-chart-line me-2"></i>Sales Report</h2>
+    <div>
+        <a href="{% url 'export_sales_csv' %}?{{ request.GET.urlencode }}" class="btn btn-success">
+            Export to CSV
+        </a>
+
+        <a href="{% url 'export_sales_pdf' %}?{{ request.GET.urlencode }}" class="btn btn-danger">
+            Export to PDF
+        </a>
+    </div>
+</div>
+
+<!-- Filter Form -->
+<div class="card mb-4">
+    <div class="card-body">
+        <form method="get" class="row g-3">
+            {{ form|crispy }}
+            <div class="col-md-2">
+                <button type="submit" class="btn btn-primary w-100">
+                    <i class="fas fa-filter me-2"></i>Filter
+                </button>
+            </div>
+            <div class="col-md-2">
+                <a href="{% url 'sales_report' %}" class="btn btn-outline-secondary w-100">
+                    <i class="fas fa-times me-2"></i>Clear
+                </a>
+            </div>
+        </form>
+    </div>
+</div>
+
+<!-- Summary Stats -->
+<div class="row mb-4">
+    <div class="col-md-3">
+        <div class="card bg-primary text-white">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>₹{{ total_sales.total_amount|default:0|floatformat:2 }}</h4>
+                        <p class="mb-0">Total Sales</p>
+                    </div>
+                    <i class="fas fa-money-bill-wave fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div class="col-md-3">
+        <div class="card bg-success text-white">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>{{ total_sales.total_count|default:0 }}</h4>
+                        <p class="mb-0">Total Transactions</p>
+                    </div>
+                    <i class="fas fa-receipt fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div class="col-md-3">
+        <div class="card bg-info text-white">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>₹{{ average_sale|default:0|floatformat:2 }}</h4>
+                        <p class="mb-0">Average Sale</p>
+                    </div>
+                    <i class="fas fa-chart-bar fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div class="col-md-3">
+        <div class="card bg-warning text-white">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>{{ total_items|default:0 }}</h4>
+                        <p class="mb-0">Items Sold</p>
+                    </div>
+                    <i class="fas fa-box fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+
+<!-- Sales Chart (Optional) -->
+{% if chart_data %}
+<div class="card mb-4">
+    <div class="card-header">
+        <h5 class="mb-0"><i class="fas fa-chart-area me-2"></i>Sales Trend</h5>
+    </div>
+    <div class="card-body">
+        <canvas id="salesChart" height="100"></canvas>
+    </div>
+</div>
+{% endif %}
+
+<!-- Sales Table -->
+<div class="card">
+    <div class="card-header d-flex justify-content-between align-items-center">
+        <h5 class="mb-0"><i class="fas fa-table me-2"></i>Sales Details</h5>
+        <span class="badge bg-secondary">{{ page_obj.paginator.count }} total records</span>
+    </div>
+    <div class="card-body">
+        <div class="table-responsive">
+            <table class="table table-hover">
+                <thead class="table-dark">
+                    <tr>
+                        <th>Invoice</th>
+                        <th>Date</th>
+                        <th>Cashier</th>
+                        <th>Customer</th>
+                        <th>Payment</th>
+                        <th>Items</th>
+                        <th>Amount</th>
+                        <th>Actions</th>
+                    </tr>
+                </thead>
+                <tbody>
+                    {% for sale in page_obj %}
+                    <tr>
+                        <td><strong class="text-primary">{{ sale.invoice_number }}</strong></td>
+                        <td>
+                            <small class="text-muted">{{ sale.created_at|date:"d/m/Y" }}</small><br>
+                            <small class="text-muted">{{ sale.created_at|date:"H:i" }}</small>
+                        </td>
+                        <td>
+                            <div class="d-flex align-items-center">
+                                <div class="avatar-sm bg-primary rounded-circle d-flex align-items-center justify-content-center me-2">
+                                    <small class="text-white">{{ sale.cashier.first_name|first }}{{ sale.cashier.last_name|first }}</small>
+                                </div>
+                                <div>
+                                    <small>{{ sale.cashier.first_name }} {{ sale.cashier.last_name }}</small>
+                                </div>
+                            </div>
+                        </td>
+                        <td>
+                            {% if sale.customer_name %}
+                                <i class="fas fa-user text-muted me-1"></i>{{ sale.customer_name }}
+                            {% else %}
+                                <span class="text-muted">Walk-in Customer</span>
+                            {% endif %}
+                        </td>
+                        <td>
+                            {% if sale.payment_method == 'cash' %}
+                                <span class="badge bg-success"><i class="fas fa-money-bill-wave me-1"></i>Cash</span>
+                            {% elif sale.payment_method == 'card' %}
+                                <span class="badge bg-primary"><i class="fas fa-credit-card me-1"></i>Card</span>
+                            {% elif sale.payment_method == 'upi' %}
+                                <span class="badge bg-info"><i class="fas fa-mobile-alt me-1"></i>UPI</span>
+                            {% else %}
+                                <span class="badge bg-secondary">{{ sale.get_payment_method_display }}</span>
+                            {% endif %}
+                        </td>
+                        <td>
+                            <span class="badge bg-light text-dark">{{ sale.sale_items.count }} items</span>
+                        </td>
+                        <td>
+                            <strong class="text-success">₹{{ sale.final_amount|floatformat:2 }}</strong>
+                            {% if sale.discount_amount and sale.discount_amount > 0 %}
+                                <br><small class="text-muted">Discount: ₹{{ sale.discount_amount|floatformat:2 }}</small>
+                            {% endif %}
+                        </td>
+                        <td>
+                            <div class="btn-group" role="group">
+                                <a href="{% url 'sale_receipt' sale.id %}" class="btn btn-sm btn-outline-primary" target="_blank" title="View Receipt">
+                                    <i class="fas fa-receipt"></i>
+                                </a>
+                                <a href="{% url 'sale_detail' sale.id %}" class="btn btn-info btn-sm">View Details
+                                    <i class="fas fa-eye"></i>
+                                </a>
+                                {% if perms.sales.change_sale %}
+                                <a href="{% url 'sale_edit' sale.id %}" class="btn btn-sm btn-outline-warning" title="Edit Sale">
+                                    <i class="fas fa-edit"></i>
+                                </a>
+                                {% endif %}
+                            </div>
+                        </td>
+                    </tr>
+                    {% empty %}
+                    <tr>
+                        <td colspan="8" class="text-center py-5">
+                            <div class="text-muted">
+                                <i class="fas fa-chart-line fa-3x mb-3"></i>
+                                <h5>No sales found</h5>
+                                <p>Try adjusting your filter criteria or check back later.</p>
+                            </div>
+                        </td>
+                    </tr>
+                    {% endfor %}
+                </tbody>
+            </table>
+        </div>
+
+        <!-- Pagination -->
+        {% if page_obj.has_other_pages %}
+        <nav aria-label="Sales pagination" class="mt-4">
+            <ul class="pagination justify-content-center">
+                {% if page_obj.has_previous %}
+                <li class="page-item">
+                    <a class="page-link" href="?{% for key, value in request.GET.items %}{% if key != 'page' %}{{ key }}={{ value }}&{% endif %}{% endfor %}page={{ page_obj.previous_page_number }}">
+                        <i class="fas fa-chevron-left"></i> Previous
+                    </a>
+                </li>
+                {% endif %}
+
+                {% for num in page_obj.paginator.page_range %}
+                    {% if page_obj.number == num %}
+                    <li class="page-item active">
+                        <span class="page-link">{{ num }}</span>
+                    </li>
+                    {% elif num > page_obj.number|add:'-3' and num < page_obj.number|add:'3' %}
+                    <li class="page-item">
+                        <a class="page-link" href="?{% for key, value in request.GET.items %}{% if key != 'page' %}{{ key }}={{ value }}&{% endif %}{% endfor %}page={{ num }}">{{ num }}</a>
+                    </li>
+                    {% endif %}
+                {% endfor %}
+
+                {% if page_obj.has_next %}
+                <li class="page-item">
+                    <a class="page-link" href="?{% for key, value in request.GET.items %}{% if key != 'page' %}{{ key }}={{ value }}&{% endif %}{% endfor %}page={{ page_obj.next_page_number }}">
+                        Next <i class="fas fa-chevron-right"></i>
+                    </a>
+                </li>
+                {% endif %}
+            </ul>
+
+            <!-- Page info -->
+            <div class="text-center mt-2">
+                <small class="text-muted">
+                    Showing {{ page_obj.start_index }} to {{ page_obj.end_index }} of {{ page_obj.paginator.count }} entries
+                </small>
+            </div>
+        </nav>
+        {% endif %}
+    </div>
+</div>
+
+<!-- Print/Export Modal -->
+<div class="modal fade" id="exportModal" tabindex="-1">
+    <div class="modal-dialog">
+        <div class="modal-content">
+            <div class="modal-header">
+                <h5 class="modal-title">Export Sales Report</h5>
+                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
+            </div>
+            <div class="modal-body">
+                <p>Choose export format:</p>
+                <div class="d-grid gap-2">
+                    <a href="{% url 'export_sales_csv' %}?{% for key, value in request.GET.items %}{{ key }}={{ value }}&{% endfor %}" class="btn btn-success">
+                        <i class="fas fa-file-csv me-2"></i>Export as CSV
+                    </a>
+                    <a href="{% url 'export_sales_pdf' %}?{% for key, value in request.GET.items %}{{ key }}={{ value }}&{% endfor %}" class="btn btn-danger">
+                        <i class="fas fa-file-pdf me-2"></i>Export as PDF
+                    </a>
+                    <button type="button" class="btn btn-primary" onclick="window.print()">
+                        <i class="fas fa-print me-2"></i>Print Report
+                    </button>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+
+{% endblock %}
+
+{% block extra_js %}
+{% if chart_data %}
+<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
+<script>
+    // Sales Chart
+    const ctx = document.getElementById('salesChart').getContext('2d');
+    const salesChart = new Chart(ctx, {
+        type: 'line',
+        data: {
+            labels: {{ chart_data.labels|safe }},
+            datasets: [{
+                label: 'Sales Amount',
+                data: {{ chart_data.data|safe }},
+                borderColor: 'rgb(75, 192, 192)',
+                backgroundColor: 'rgba(75, 192, 192, 0.1)',
+                tension: 0.1,
+                fill: true
+            }]
+        },
+        options: {
+            responsive: true,
+            plugins: {
+                title: {
+                    display: true,
+                    text: 'Daily Sales Trend'
+                },
+                legend: {
+                    display: false
+                }
+            },
+            scales: {
+                y: {
+                    beginAtZero: true,
+                    ticks: {
+                        callback: function(value) {
+                            return '₹' + value.toLocaleString();
+                        }
+                    }
+                }
+            }
+        }
+    });
+</script>
+{% endif %}
+
+<script>
+    // Auto-refresh functionality (optional)
+    function autoRefresh() {
+        const urlParams = new URLSearchParams(window.location.search);
+        if (!urlParams.has('date_from') && !urlParams.has('date_to')) {
+            // Only auto-refresh if no specific date filters are applied
+            setTimeout(() => {
+                location.reload();
+            }, 300000); // Refresh every 5 minutes
+        }
+    }
+    autoRefresh();
+
+    // Print specific styling
+    window.addEventListener('beforeprint', function() {
+        document.body.classList.add('printing');
+    });
+
+    window.addEventListener('afterprint', function() {
+        document.body.classList.remove('printing');
+    });
+</script>
+
+<style>
+    .avatar-sm {
+        width: 32px;
+        height: 32px;
+        font-size: 0.75rem;
+    }
+
+    @media print {
+        .btn, .pagination, .card-header {
+            display: none !important;
+        }
+
+        .card {
+            border: none !important;
+            box-shadow: none !important;
+        }
+
+        .table {
+            font-size: 0.8rem;
+        }
+
+        .printing .d-print-none {
+            display: none !important;
+        }
+    }
+
+    .table tbody tr:hover {
+        background-color: rgba(0, 123, 255, 0.05);
+    }
+
+    .badge {
+        font-size: 0.75em;
+    }
+</style>
+{% endblock %}
\ No newline at end of file
Index: templates/registration/register.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/registration/register.html b/templates/registration/register.html
--- a/templates/registration/register.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/registration/register.html	(date 1753422688264)
@@ -1,10 +1,32 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+{% load crispy_forms_tags %}
+
+{% block title %}Register - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="row justify-content-center">
+    <div class="col-md-8 col-lg-6">
+        <div class="card shadow">
+            <div class="card-body p-5">
+                <div class="text-center mb-4">
+                    <i class="fas fa-user-plus fa-3x text-primary mb-3"></i>
+                    <h3>Create Account</h3>
+                    <p class="text-muted">Join Mini Store POS</p>
+                </div>
+                
+                <form method="post">
+                    {% csrf_token %}
+                    {{ form|crispy }}
+                    <button type="submit" class="btn btn-primary w-100 mb-3">
+                        <i class="fas fa-user-plus me-2"></i>Create Account
+                    </button>
+                </form>
+                
+                <div class="text-center">
+                    <a href="{% url 'login' %}" class="text-decoration-none">Already have an account? Sign in here</a>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: templates/admin/dashboard.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/admin/dashboard.html b/templates/admin/dashboard.html
--- a/templates/admin/dashboard.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/admin/dashboard.html	(date 1753422726935)
@@ -1,10 +1,126 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+
+{% block title %}Admin Dashboard - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="d-flex justify-content-between align-items-center mb-4">
+    <h2><i class="fas fa-tachometer-alt me-2"></i>Admin Dashboard</h2>
+    <span class="text-muted">Welcome back, {{ user.first_name }}!</span>
+</div>
+
+<div class="row mb-4">
+    <div class="col-md-3">
+        <div class="card text-white bg-primary">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>{{ total_products }}</h4>
+                        <p class="mb-0">Total Products</p>
+                    </div>
+                    <i class="fas fa-box fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div class="col-md-3">
+        <div class="card text-white bg-warning">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>{{ low_stock_products }}</h4>
+                        <p class="mb-0">Low Stock Items</p>
+                    </div>
+                    <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div class="col-md-3">
+        <div class="card text-white bg-success">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>₹{{ total_sales_today }}</h4>
+                        <p class="mb-0">Today's Sales</p>
+                    </div>
+                    <i class="fas fa-chart-line fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div class="col-md-3">
+        <div class="card text-white bg-info">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>₹{{ total_sales_week }}</h4>
+                        <p class="mb-0">This Week</p>
+                    </div>
+                    <i class="fas fa-calendar-week fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+
+<div class="row">
+    <div class="col-md-6">
+        <div class="card">
+            <div class="card-header">
+                <h5><i class="fas fa-receipt me-2"></i>Recent Sales</h5>
+            </div>
+            <div class="card-body">
+                {% if recent_sales %}
+                    <div class="table-responsive">
+                        <table class="table table-sm">
+                            <thead>
+                                <tr>
+                                    <th>Invoice</th>
+                                    <th>Cashier</th>
+                                    <th>Amount</th>
+                                    <th>Time</th>
+                                </tr>
+                            </thead>
+                            <tbody>
+                                {% for sale in recent_sales %}
+                                <tr>
+                                    <td>{{ sale.invoice_number }}</td>
+                                    <td>{{ sale.cashier.first_name }}</td>
+                                    <td>₹{{ sale.final_amount }}</td>
+                                    <td>{{ sale.created_at|date:"H:i" }}</td>
+                                </tr>
+                                {% endfor %}
+                            </tbody>
+                        </table>
+                    </div>
+                {% else %}
+                    <p class="text-muted">No recent sales found.</p>
+                {% endif %}
+            </div>
+        </div>
+    </div>
+    
+    <div class="col-md-6">
+        <div class="card">
+            <div class="card-header">
+                <h5><i class="fas fa-exclamation-triangle me-2"></i>Low Stock Alert</h5>
+            </div>
+            <div class="card-body">
+                {% if low_stock_items %}
+                    {% for product in low_stock_items %}
+                    <div class="d-flex justify-content-between align-items-center mb-2 p-2 bg-light rounded">
+                        <div>
+                            <strong>{{ product.name }}</strong>
+                            <small class="text-muted d-block">{{ product.category.name }}</small>
+                        </div>
+                        <span class="badge bg-warning">{{ product.stock_quantity }} left</span>
+                    </div>
+                    {% endfor %}
+                {% else %}
+                    <p class="text-muted">All products are well stocked!</p>
+                {% endif %}
+            </div>
+        </div>
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: templates/admin/sale_detail.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/admin/sale_detail.html b/templates/admin/sale_detail.html
--- a/templates/admin/sale_detail.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/admin/sale_detail.html	(date 1753467126470)
@@ -1,10 +1,73 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+
+{% block content %}
+<div class="container mt-4">
+    <div class="card">
+        <div class="card-header">
+            <h4>Sale Details - Invoice #{{ sale.invoice_number }}</h4>
+        </div>
+        <div class="card-body">
+            <div class="row mb-4">
+                <div class="col-md-6">
+                    <h5>Sale Information</h5>
+                    <p><strong>Date:</strong> {{ sale.created_at|date:"F d, Y H:i" }}</p>
+                    <p><strong>Cashier:</strong> {{ sale.cashier.get_full_name|default:sale.cashier.username }}</p>
+                    <p><strong>Payment Method:</strong> {{ sale.payment_method|title }}</p>
+                </div>
+                <div class="col-md-6">
+                    <h5>Customer Information</h5>
+                    <p><strong>Name:</strong> {{ sale.customer_name|default:"N/A" }}</p>
+                    <p><strong>Phone:</strong> {{ sale.customer_phone|default:"N/A" }}</p>
+                </div>
+            </div>
+
+            <h5>Items</h5>
+            <div class="table-responsive">
+                <table class="table table-striped">
+                    <thead>
+                        <tr>
+                            <th>Product</th>
+                            <th>Quantity</th>
+                            <th>Unit Price</th>
+                            <th>Total Price</th>
+                        </tr>
+                    </thead>
+                    <tbody>
+                        {% for item in sale_items %}
+                        <tr>
+                            <td>{{ item.product.name }}</td>
+                            <td>{{ item.quantity }}</td>
+                            <td>${{ item.unit_price }}</td>
+                            <td>${{ item.total_price }}</td>
+                        </tr>
+                        {% endfor %}
+                    </tbody>
+                    <tfoot>
+                        <tr>
+                            <td colspan="3" class="text-end"><strong>Subtotal:</strong></td>
+                            <td>${{ sale.total_amount }}</td>
+                        </tr>
+                        <tr>
+                            <td colspan="3" class="text-end"><strong>Discount:</strong></td>
+                            <td>${{ sale.discount_amount }}</td>
+                        </tr>
+                        <tr>
+                            <td colspan="3" class="text-end"><strong>Tax:</strong></td>
+                            <td>${{ sale.tax_amount }}</td>
+                        </tr>
+                        <tr>
+                            <td colspan="3" class="text-end"><strong>Final Amount:</strong></td>
+                            <td><strong>${{ sale.final_amount }}</strong></td>
+                        </tr>
+                    </tfoot>
+                </table>
+            </div>
+            
+            <div class="mt-4">
+                <a href="{% url 'sales_report' %}" class="btn btn-secondary">Back to Sales Report</a>
+                <a href="{% url 'sale_receipt' sale.id %}" class="btn btn-primary" target="_blank">View Receipt</a>
+            </div>
+        </div>
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: templates/admin/sale_edit.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/admin/sale_edit.html b/templates/admin/sale_edit.html
--- a/templates/admin/sale_edit.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/admin/sale_edit.html	(date 1753467428144)
@@ -1,10 +1,103 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+
+{% block content %}
+<div class="container mt-4">
+    <div class="card">
+        <div class="card-header">
+            <h4>Edit Sale - Invoice #{{ sale.invoice_number }}</h4>
+        </div>
+        <div class="card-body">
+            <form method="post">
+                {% csrf_token %}
+                
+                <div class="row">
+                    <div class="col-md-6">
+                        <h5>Sale Information</h5>
+                        <p><strong>Date:</strong> {{ sale.created_at|date:"F d, Y H:i" }}</p>
+                        <p><strong>Cashier:</strong> {{ sale.cashier.get_full_name|default:sale.cashier.username }}</p>
+                    </div>
+                    
+                    <div class="col-md-6">
+                        <h5>Items</h5>
+                        <div class="table-responsive">
+                            <table class="table table-sm">
+                                <thead>
+                                    <tr>
+                                        <th>Product</th>
+                                        <th>Quantity</th>
+                                        <th>Unit Price</th>
+                                        <th>Total</th>
+                                    </tr>
+                                </thead>
+                                <tbody>
+                                    {% for item in sale_items %}
+                                    <tr>
+                                        <td>{{ item.product.name }}</td>
+                                        <td>{{ item.quantity }}</td>
+                                        <td>${{ item.unit_price }}</td>
+                                        <td>${{ item.total_price }}</td>
+                                    </tr>
+                                    {% endfor %}
+                                </tbody>
+                                <tfoot>
+                                    <tr>
+                                        <td colspan="3" class="text-end"><strong>Subtotal:</strong></td>
+                                        <td>${{ sale.total_amount }}</td>
+                                    </tr>
+                                </tfoot>
+                            </table>
+                        </div>
+                    </div>
+                </div>
+
+                <div class="row mt-4">
+                    <div class="col-md-6">
+                        <h5>Customer Information</h5>
+                        <div class="mb-3">
+                            <label for="{{ form.customer_name.id_for_label }}" class="form-label">Customer Name</label>
+                            {{ form.customer_name|add_class:"form-control" }}
+                        </div>
+                        <div class="mb-3">
+                            <label for="{{ form.customer_phone.id_for_label }}" class="form-label">Customer Phone</label>
+                            {{ form.customer_phone|add_class:"form-control" }}
+                        </div>
+                    </div>
+                    
+                    <div class="col-md-6">
+                        <h5>Payment Details</h5>
+                        <div class="mb-3">
+                            <label for="{{ form.payment_method.id_for_label }}" class="form-label">Payment Method</label>
+                            {{ form.payment_method|add_class:"form-control" }}
+                        </div>
+                        <div class="mb-3">
+                            <label for="{{ form.discount_amount.id_for_label }}" class="form-label">Discount Amount</label>
+                            {{ form.discount_amount|add_class:"form-control" }}
+                        </div>
+                        <div class="mb-3">
+                            <label for="{{ form.tax_amount.id_for_label }}" class="form-label">Tax Amount</label>
+                            {{ form.tax_amount|add_class:"form-control" }}
+                        </div>
+                    </div>
+                </div>
+
+                <div class="mb-3">
+                    <label for="{{ form.notes.id_for_label }}" class="form-label">Notes</label>
+                    {{ form.notes|add_class:"form-control" }}
+                </div>
+
+                {% if form.errors %}
+                <div class="alert alert-danger">
+                    Please correct the errors below.
+                    {{ form.errors }}
+                </div>
+                {% endif %}
+
+                <div class="mt-4">
+                    <button type="submit" class="btn btn-primary">Save Changes</button>
+                    <a href="{% url 'sale_detail' sale.id %}" class="btn btn-secondary">Cancel</a>
+                </div>
+            </form>
+        </div>
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: templates/admin/product_form.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/admin/product_form.html b/templates/admin/product_form.html
--- a/templates/admin/product_form.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/admin/product_form.html	(date 1753422849825)
@@ -1,10 +1,31 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+{% load crispy_forms_tags %}
+
+{% block title %}{{ title }} - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="row justify-content-center">
+    <div class="col-md-8">
+        <div class="card">
+            <div class="card-header">
+                <h5><i class="fas fa-box me-2"></i>{{ title }}</h5>
+            </div>
+            <div class="card-body">
+                <form method="post" enctype="multipart/form-data">
+                    {% csrf_token %}
+                    {{ form|crispy }}
+                    
+                    <div class="d-flex justify-content-between">
+                        <a href="{% url 'product_list' %}" class="btn btn-secondary">
+                            <i class="fas fa-arrow-left me-2"></i>Back to Products
+                        </a>
+                        <button type="submit" class="btn btn-primary">
+                            <i class="fas fa-save me-2"></i>Save Product
+                        </button>
+                    </div>
+                </form>
+            </div>
+        </div>
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: templates/receipt.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/receipt.html b/templates/receipt.html
--- a/templates/receipt.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/receipt.html	(date 1753422885348)
@@ -1,10 +1,119 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+
+{% block title %}Receipt - {{ sale.invoice_number }}{% endblock %}
+
+{% block content %}
+<div class="row justify-content-center">
+    <div class="col-md-6">
+        <div class="card" id="receipt">
+            <div class="card-body">
+                <div class="text-center mb-4">
+                    <h3>Mini Store POS</h3>
+                    <p class="text-muted">Thank you for your purchase!</p>
+                </div>
+                
+                <div class="row mb-3">
+                    <div class="col-6">
+                        <strong>Invoice:</strong> {{ sale.invoice_number }}
+                    </div>
+                    <div class="col-6 text-end">
+                        <strong>Date:</strong> {{ sale.created_at|date:"d/m/Y H:i" }}
+                    </div>
+                </div>
+                
+                <div class="row mb-3">
+                    <div class="col-6">
+                        <strong>Cashier:</strong> {{ sale.cashier.first_name }} {{ sale.cashier.last_name }}
+                    </div>
+                    <div class="col-6 text-end">
+                        <strong>Payment:</strong> {{ sale.get_payment_method_display }}
+                    </div>
+                </div>
+                
+                {% if sale.customer_name %}
+                <div class="mb-3">
+                    <strong>Customer:</strong> {{ sale.customer_name }}
+                    {% if sale.customer_phone %} - {{ sale.customer_phone }}{% endif %}
+                </div>
+                {% endif %}
+                
+                <hr>
+                
+                <table class="table table-sm">
+                    <thead>
+                        <tr>
+                            <th>Item</th>
+                            <th class="text-center">Qty</th>
+                            <th class="text-end">Price</th>
+                            <th class="text-end">Total</th>
+                        </tr>
+                    </thead>
+                    <tbody>
+                        {% for item in sale.items.all %}
+                        <tr>
+                            <td>{{ item.product.name }}</td>
+                            <td class="text-center">{{ item.quantity }}</td>
+                            <td class="text-end">₹{{ item.unit_price }}</td>
+                            <td class="text-end">₹{{ item.total_price }}</td>
+                        </tr>
+                        {% endfor %}
+                    </tbody>
+                </table>
+                
+                <hr>
+                
+                <div class="row">
+                    <div class="col-6">
+                        <p><strong>Subtotal:</strong></p>
+                        {% if sale.discount_amount > 0 %}
+                        <p><strong>Discount:</strong></p>
+                        {% endif %}
+                        <h5><strong>Total:</strong></h5>
+                    </div>
+                    <div class="col-6 text-end">
+                        <p>₹{{ sale.total_amount }}</p>
+                        {% if sale.discount_amount > 0 %}
+                        <p>-₹{{ sale.discount_amount }}</p>
+                        {% endif %}
+                        <h5>₹{{ sale.final_amount }}</h5>
+                    </div>
+                </div>
+                
+                <div class="text-center mt-4">
+                    <p class="text-muted">Thank you for shopping with us!</p>
+                    <p class="text-muted small">Have a great day!</p>
+                </div>
+            </div>
+        </div>
+        
+        <div class="text-center mt-3">
+            <button onclick="window.print()" class="btn btn-primary">
+                <i class="fas fa-print me-2"></i>Print Receipt
+            </button>
+            <a href="{% url 'dashboard' %}" class="btn btn-secondary ms-2">
+                <i class="fas fa-arrow-left me-2"></i>Back to POS
+            </a>
+        </div>
+    </div>
+</div>
+
+<style>
+@media print {
+    body * {
+        visibility: hidden;
+    }
+    #receipt, #receipt * {
+        visibility: visible;
+    }
+    #receipt {
+        position: absolute;
+        left: 0;
+        top: 0;
+        width: 100% !important;
+    }
+    .btn {
+        display: none !important;
+    }
+}
+</style>
+{% endblock %}
\ No newline at end of file
Index: templates/cashier/pos.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/cashier/pos.html b/templates/cashier/pos.html
--- a/templates/cashier/pos.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/cashier/pos.html	(date 1753422781391)
@@ -1,10 +1,126 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+
+{% block title %}Admin Dashboard - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="d-flex justify-content-between align-items-center mb-4">
+    <h2><i class="fas fa-tachometer-alt me-2"></i>Admin Dashboard</h2>
+    <span class="text-muted">Welcome back, {{ user.first_name }}!</span>
+</div>
+
+<div class="row mb-4">
+    <div class="col-md-3">
+        <div class="card text-white bg-primary">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>{{ total_products }}</h4>
+                        <p class="mb-0">Total Products</p>
+                    </div>
+                    <i class="fas fa-box fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div class="col-md-3">
+        <div class="card text-white bg-warning">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>{{ low_stock_products }}</h4>
+                        <p class="mb-0">Low Stock Items</p>
+                    </div>
+                    <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div class="col-md-3">
+        <div class="card text-white bg-success">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>₹{{ total_sales_today }}</h4>
+                        <p class="mb-0">Today's Sales</p>
+                    </div>
+                    <i class="fas fa-chart-line fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div class="col-md-3">
+        <div class="card text-white bg-info">
+            <div class="card-body">
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <h4>₹{{ total_sales_week }}</h4>
+                        <p class="mb-0">This Week</p>
+                    </div>
+                    <i class="fas fa-calendar-week fa-2x opacity-75"></i>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+
+<div class="row">
+    <div class="col-md-6">
+        <div class="card">
+            <div class="card-header">
+                <h5><i class="fas fa-receipt me-2"></i>Recent Sales</h5>
+            </div>
+            <div class="card-body">
+                {% if recent_sales %}
+                    <div class="table-responsive">
+                        <table class="table table-sm">
+                            <thead>
+                                <tr>
+                                    <th>Invoice</th>
+                                    <th>Cashier</th>
+                                    <th>Amount</th>
+                                    <th>Time</th>
+                                </tr>
+                            </thead>
+                            <tbody>
+                                {% for sale in recent_sales %}
+                                <tr>
+                                    <td>{{ sale.invoice_number }}</td>
+                                    <td>{{ sale.cashier.first_name }}</td>
+                                    <td>₹{{ sale.final_amount }}</td>
+                                    <td>{{ sale.created_at|date:"H:i" }}</td>
+                                </tr>
+                                {% endfor %}
+                            </tbody>
+                        </table>
+                    </div>
+                {% else %}
+                    <p class="text-muted">No recent sales found.</p>
+                {% endif %}
+            </div>
+        </div>
+    </div>
+    
+    <div class="col-md-6">
+        <div class="card">
+            <div class="card-header">
+                <h5><i class="fas fa-exclamation-triangle me-2"></i>Low Stock Alert</h5>
+            </div>
+            <div class="card-body">
+                {% if low_stock_items %}
+                    {% for product in low_stock_items %}
+                    <div class="d-flex justify-content-between align-items-center mb-2 p-2 bg-light rounded">
+                        <div>
+                            <strong>{{ product.name }}</strong>
+                            <small class="text-muted d-block">{{ product.category.name }}</small>
+                        </div>
+                        <span class="badge bg-warning">{{ product.stock_quantity }} left</span>
+                    </div>
+                    {% endfor %}
+                {% else %}
+                    <p class="text-muted">All products are well stocked!</p>
+                {% endif %}
+            </div>
+        </div>
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: templates/admin/product_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/admin/product_list.html b/templates/admin/product_list.html
--- a/templates/admin/product_list.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/admin/product_list.html	(date 1753422836269)
@@ -1,10 +1,133 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+
+{% block title %}Products - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="d-flex justify-content-between align-items-center mb-4">
+    <h2><i class="fas fa-box me-2"></i>Products</h2>
+    <a href="{% url 'product_create' %}" class="btn btn-primary">
+        <i class="fas fa-plus me-2"></i>Add Product
+    </a>
+</div>
+
+<!-- Search and Filter -->
+<div class="card mb-4">
+    <div class="card-body">
+        <form method="get" class="row g-3">
+            <div class="col-md-4">
+                <input type="text" name="search" class="form-control" placeholder="Search products..." value="{{ search_query }}">
+            </div>
+            <div class="col-md-3">
+                <select name="category" class="form-select">
+                    <option value="">All Categories</option>
+                    {% for cat in categories %}
+                    <option value="{{ cat.id }}" {% if cat.id|stringformat:"s" == category_filter %}selected{% endif %}>
+                        {{ cat.name }}
+                    </option>
+                    {% endfor %}
+                </select>
+            </div>
+            <div class="col-md-2">
+                <button type="submit" class="btn btn-outline-primary w-100">
+                    <i class="fas fa-search me-2"></i>Search
+                </button>
+            </div>
+        </form>
+    </div>
+</div>
+
+<!-- Products Table -->
+<div class="card">
+    <div class="card-body">
+        <div class="table-responsive">
+            <table class="table table-hover">
+                <thead>
+                    <tr>
+                        <th>Image</th>
+                        <th>Name</th>
+                        <th>Category</th>
+                        <th>Price</th>
+                        <th>Stock</th>
+                        <th>Status</th>
+                        <th>Actions</th>
+                    </tr>
+                </thead>
+                <tbody>
+                    {% for product in page_obj %}
+                    <tr {% if product.is_low_stock %}class="table-warning"{% endif %}>
+                        <td>
+                            <img src="{{ product.image_url }}" alt="{{ product.name }}" 
+                                 class="rounded" style="width: 50px; height: 50px; object-fit: cover;">
+                        </td>
+                        <td>
+                            <strong>{{ product.name }}</strong>
+                            {% if product.barcode %}
+                            <small class="text-muted d-block">{{ product.barcode }}</small>
+                            {% endif %}
+                        </td>
+                        <td>{{ product.category.name }}</td>
+                        <td>₹{{ product.price }}</td>
+                        <td>
+                            {{ product.stock_quantity }}
+                            {% if product.is_low_stock %}
+                            <i class="fas fa-exclamation-triangle text-warning ms-1" title="Low Stock"></i>
+                            {% endif %}
+                        </td>
+                        <td>
+                            {% if product.is_active %}
+                            <span class="badge bg-success">Active</span>
+                            {% else %}
+                            <span class="badge bg-secondary">Inactive</span>
+                            {% endif %}
+                        </td>
+                        <td>
+                            <a href="{% url 'product_edit' product.id %}" class="btn btn-sm btn-outline-primary">
+                                <i class="fas fa-edit"></i>
+                            </a>
+                        </td>
+                    </tr>
+                    {% empty %}
+                    <tr>
+                        <td colspan="7" class="text-center py-4">
+                            <i class="fas fa-search fa-2x text-muted mb-2"></i>
+                            <p class="text-muted">No products found.</p>
+                        </td>
+                    </tr>
+                    {% endfor %}
+                </tbody>
+            </table>
+        </div>
+        
+        <!-- Pagination -->
+        {% if page_obj.has_other_pages %}
+        <nav aria-label="Products pagination">
+            <ul class="pagination justify-content-center">
+                {% if page_obj.has_previous %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ page_obj.previous_page_number }}{% if search_query %}&search={{ search_query }}{% endif %}{% if category_filter %}&category={{ category_filter }}{% endif %}">Previous</a>
+                </li>
+                {% endif %}
+                
+                {% for num in page_obj.paginator.page_range %}
+                {% if page_obj.number == num %}
+                <li class="page-item active">
+                    <span class="page-link">{{ num }}</span>
+                </li>
+                {% else %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ num }}{% if search_query %}&search={{ search_query }}{% endif %}{% if category_filter %}&category={{ category_filter }}{% endif %}">{{ num }}</a>
+                </li>
+                {% endif %}
+                {% endfor %}
+                
+                {% if page_obj.has_next %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ page_obj.next_page_number }}{% if search_query %}&search={{ search_query }}{% endif %}{% if category_filter %}&category={{ category_filter }}{% endif %}">Next</a>
+                </li>
+                {% endif %}
+            </ul>
+        </nav>
+        {% endif %}
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: templates/admin/user_management.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/admin/user_management.html b/templates/admin/user_management.html
--- a/templates/admin/user_management.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/admin/user_management.html	(date 1753423017196)
@@ -1,10 +1,95 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+
+{% block title %}User Management - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="d-flex justify-content-between align-items-center mb-4">
+    <h2><i class="fas fa-users me-2"></i>User Management</h2>
+    <a href="{% url 'register' %}" class="btn btn-primary">
+        <i class="fas fa-user-plus me-2"></i>Add User
+    </a>
+</div>
+
+<div class="card">
+    <div class="card-body">
+        <div class="table-responsive">
+            <table class="table table-hover">
+                <thead>
+                    <tr>
+                        <th>Name</th>
+                        <th>Username</th>
+                        <th>Email</th>
+                        <th>Role</th>
+                        <th>Phone</th>
+                        <th>Status</th>
+                        <th>Joined</th>
+                    </tr>
+                </thead>
+                <tbody>
+                    {% for user in page_obj %}
+                    <tr>
+                        <td><strong>{{ user.first_name }} {{ user.last_name }}</strong></td>
+                        <td>{{ user.username }}</td>
+                        <td>{{ user.email }}</td>
+                        <td>
+                            {% if user.userprofile.role == 'admin' %}
+                            <span class="badge bg-danger">Admin</span>
+                            {% else %}
+                            <span class="badge bg-primary">Cashier</span>
+                            {% endif %}
+                        </td>
+                        <td>{{ user.userprofile.phone|default:"-" }}</td>
+                        <td>
+                            {% if user.is_active %}
+                            <span class="badge bg-success">Active</span>
+                            {% else %}
+                            <span class="badge bg-secondary">Inactive</span>
+                            {% endif %}
+                        </td>
+                        <td>{{ user.date_joined|date:"d/m/Y" }}</td>
+                    </tr>
+                    {% empty %}
+                    <tr>
+                        <td colspan="7" class="text-center py-4">
+                            <i class="fas fa-users fa-2x text-muted mb-2"></i>
+                            <p class="text-muted">No users found.</p>
+                        </td>
+                    </tr>
+                    {% endfor %}
+                </tbody>
+            </table>
+        </div>
+        
+        <!-- Pagination -->
+        {% if page_obj.has_other_pages %}
+        <nav aria-label="Users pagination">
+            <ul class="pagination justify-content-center">
+                {% if page_obj.has_previous %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ page_obj.previous_page_number }}">Previous</a>
+                </li>
+                {% endif %}
+                
+                {% for num in page_obj.paginator.page_range %}
+                {% if page_obj.number == num %}
+                <li class="page-item active">
+                    <span class="page-link">{{ num }}</span>
+                </li>
+                {% else %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ num }}">{{ num }}</a>
+                </li>
+                {% endif %}
+                {% endfor %}
+                
+                {% if page_obj.has_next %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ page_obj.next_page_number }}">Next</a>
+                </li>
+                {% endif %}
+            </ul>
+        </nav>
+        {% endif %}
+    </div>
+</div>
+{% endblock %}
Index: templates/cashier/my_sales.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/cashier/my_sales.html b/templates/cashier/my_sales.html
--- a/templates/cashier/my_sales.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/cashier/my_sales.html	(date 1753423043035)
@@ -1,10 +1,89 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+
+{% block title %}My Sales - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="d-flex justify-content-between align-items-center mb-4">
+    <h2><i class="fas fa-receipt me-2"></i>My Sales</h2>
+    <a href="{% url 'dashboard' %}" class="btn btn-primary">
+        <i class="fas fa-cash-register me-2"></i>Back to POS
+    </a>
+</div>
+
+<div class="card">
+    <div class="card-body">
+        <div class="table-responsive">
+            <table class="table table-hover">
+                <thead>
+                    <tr>
+                        <th>Invoice</th>
+                        <th>Date</th>
+                        <th>Customer</th>
+                        <th>Items</th>
+                        <th>Payment</th>
+                        <th>Amount</th>
+                        <th>Actions</th>
+                    </tr>
+                </thead>
+                <tbody>
+                    {% for sale in page_obj %}
+                    <tr>
+                        <td><strong>{{ sale.invoice_number }}</strong></td>
+                        <td>{{ sale.created_at|date:"d/m/Y H:i" }}</td>
+                        <td>{{ sale.customer_name|default:"-" }}</td>
+                        <td>{{ sale.items.count }} item{{ sale.items.count|pluralize }}</td>
+                        <td>
+                            <span class="badge bg-info">{{ sale.get_payment_method_display }}</span>
+                        </td>
+                        <td>₹{{ sale.final_amount }}</td>
+                        <td>
+                            <a href="{% url 'sale_receipt' sale.id %}" class="btn btn-sm btn-outline-primary" target="_blank">
+                                <i class="fas fa-receipt"></i> Receipt
+                            </a>
+                        </td>
+                    </tr>
+                    {% empty %}
+                    <tr>
+                        <td colspan="7" class="text-center py-4">
+                            <i class="fas fa-receipt fa-2x text-muted mb-2"></i>
+                            <p class="text-muted">No sales found.</p>
+                        </td>
+                    </tr>
+                    {% endfor %}
+                </tbody>
+            </table>
+        </div>
+        
+        <!-- Pagination -->
+        {% if page_obj.has_other_pages %}
+        <nav aria-label="Sales pagination">
+            <ul class="pagination justify-content-center">
+                {% if page_obj.has_previous %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ page_obj.previous_page_number }}">Previous</a>
+                </li>
+                {% endif %}
+                
+                {% for num in page_obj.paginator.page_range %}
+                {% if page_obj.number == num %}
+                <li class="page-item active">
+                    <span class="page-link">{{ num }}</span>
+                </li>
+                {% else %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ num }}">{{ num }}</a>
+                </li>
+                {% endif %}
+                {% endfor %}
+                
+                {% if page_obj.has_next %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ page_obj.next_page_number }}">Next</a>
+                </li>
+                {% endif %}
+            </ul>
+        </nav>
+        {% endif %}
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: templates/admin/category_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/admin/category_list.html b/templates/admin/category_list.html
--- a/templates/admin/category_list.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/admin/category_list.html	(date 1753422933483)
@@ -1,10 +1,89 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+
+{% block title %}Categories - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="d-flex justify-content-between align-items-center mb-4">
+    <h2><i class="fas fa-tags me-2"></i>Categories</h2>
+    <a href="{% url 'category_create' %}" class="btn btn-primary">
+        <i class="fas fa-plus me-2"></i>Add Category
+    </a>
+</div>
+
+<div class="card">
+    <div class="card-body">
+        <div class="table-responsive">
+            <table class="table table-hover">
+                <thead>
+                    <tr>
+                        <th>Name</th>
+                        <th>Description</th>
+                        <th>Status</th>
+                        <th>Created</th>
+                        <th>Actions</th>
+                    </tr>
+                </thead>
+                <tbody>
+                    {% for category in page_obj %}
+                    <tr>
+                        <td><strong>{{ category.name }}</strong></td>
+                        <td>{{ category.description|truncatechars:50 }}</td>
+                        <td>
+                            {% if category.is_active %}
+                            <span class="badge bg-success">Active</span>
+                            {% else %}
+                            <span class="badge bg-secondary">Inactive</span>
+                            {% endif %}
+                        </td>
+                        <td>{{ category.created_at|date:"d/m/Y" }}</td>
+                        <td>
+                            <a href="{% url 'category_edit' category.id %}" class="btn btn-sm btn-outline-primary">
+                                <i class="fas fa-edit"></i>
+                            </a>
+                        </td>
+                    </tr>
+                    {% empty %}
+                    <tr>
+                        <td colspan="5" class="text-center py-4">
+                            <i class="fas fa-tags fa-2x text-muted mb-2"></i>
+                            <p class="text-muted">No categories found.</p>
+                        </td>
+                    </tr>
+                    {% endfor %}
+                </tbody>
+            </table>
+        </div>
+        
+        <!-- Pagination -->
+        {% if page_obj.has_other_pages %}
+        <nav aria-label="Categories pagination">
+            <ul class="pagination justify-content-center">
+                {% if page_obj.has_previous %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ page_obj.previous_page_number }}">Previous</a>
+                </li>
+                {% endif %}
+                
+                {% for num in page_obj.paginator.page_range %}
+                {% if page_obj.number == num %}
+                <li class="page-item active">
+                    <span class="page-link">{{ num }}</span>
+                </li>
+                {% else %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ num }}">{{ num }}</a>
+                </li>
+                {% endif %}
+                {% endfor %}
+                
+                {% if page_obj.has_next %}
+                <li class="page-item">
+                    <a class="page-link" href="?page={{ page_obj.next_page_number }}">Next</a>
+                </li>
+                {% endif %}
+            </ul>
+        </nav>
+        {% endif %}
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: templates/admin/stock_management.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>$Title$</title>\r\n</head>\r\n<body>\r\n$END$\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/admin/stock_management.html b/templates/admin/stock_management.html
--- a/templates/admin/stock_management.html	(revision f79cb79c56c5d19595a32326f43e6f27b99b5c2c)
+++ b/templates/admin/stock_management.html	(date 1753423001350)
@@ -1,10 +1,105 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8">
-  <title>$Title$</title>
-</head>
-<body>
-$END$
-</body>
-</html>
\ No newline at end of file
+{% extends 'base.html' %}
+{% load crispy_forms_tags %}
+
+{% block title %}Stock Management - Mini Store POS{% endblock %}
+
+{% block content %}
+<div class="d-flex justify-content-between align-items-center mb-4">
+    <h2><i class="fas fa-warehouse me-2"></i>Stock Management</h2>
+</div>
+
+<div class="row">
+    <!-- Stock Adjustment Form -->
+    <div class="col-md-4">
+        <div class="card">
+            <div class="card-header">
+                <h5><i class="fas fa-edit me-2"></i>Stock Adjustment</h5>
+            </div>
+            <div class="card-body">
+                <form method="post">
+                    {% csrf_token %}
+                    {{ form|crispy }}
+                    <button type="submit" class="btn btn-primary w-100">
+                        <i class="fas fa-save me-2"></i>Update Stock
+                    </button>
+                </form>
+            </div>
+        </div>
+        
+        <!-- Low Stock Alert -->
+        <div class="card mt-4">
+            <div class="card-header bg-warning text-dark">
+                <h6><i class="fas fa-exclamation-triangle me-2"></i>Low Stock Alert</h6>
+            </div>
+            <div class="card-body">
+                {% if low_stock_products %}
+                    {% for product in low_stock_products %}
+                    <div class="d-flex justify-content-between align-items-center mb-2 p-2 bg-light rounded">
+                        <div>
+                            <strong>{{ product.name }}</strong>
+                            <small class="text-muted d-block">{{ product.category.name }}</small>
+                        </div>
+                        <span class="badge bg-warning text-dark">{{ product.stock_quantity }}</span>
+                    </div>
+                    {% endfor %}
+                {% else %}
+                    <p class="text-muted mb-0">No low stock items!</p>
+                {% endif %}
+            </div>
+        </div>
+    </div>
+    
+    <!-- Recent Stock Movements -->
+    <div class="col-md-8">
+        <div class="card">
+            <div class="card-header">
+                <h5><i class="fas fa-history me-2"></i>Recent Stock Movements</h5>
+            </div>
+            <div class="card-body">
+                <div class="table-responsive">
+                    <table class="table table-sm">
+                        <thead>
+                            <tr>
+                                <th>Product</th>
+                                <th>Type</th>
+                                <th>Quantity</th>
+                                <th>Notes</th>
+                                <th>User</th>
+                                <th>Date</th>
+                            </tr>
+                        </thead>
+                        <tbody>
+                            {% for movement in movements %}
+                            <tr>
+                                <td>{{ movement.product.name }}</td>
+                                <td>
+                                    {% if movement.movement_type == 'in' %}
+                                    <span class="badge bg-success">Stock In</span>
+                                    {% elif movement.movement_type == 'out' %}
+                                    <span class="badge bg-danger">Stock Out</span>
+                                    {% else %}
+                                    <span class="badge bg-info">Adjustment</span>
+                                    {% endif %}
+                                </td>
+                                <td>
+                                    {% if movement.movement_type == 'out' %}-{% endif %}{{ movement.quantity }}
+                                </td>
+                                <td>{{ movement.notes|truncatechars:30 }}</td>
+                                <td>{{ movement.created_by.first_name }}</td>
+                                <td>{{ movement.created_at|date:"d/m H:i" }}</td>
+                            </tr>
+                            {% empty %}
+                            <tr>
+                                <td colspan="6" class="text-center py-3">
+                                    <p class="text-muted mb-0">No stock movements found.</p>
+                                </td>
+                            </tr>
+                            {% endfor %}
+                        </tbody>
+                    </table>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
